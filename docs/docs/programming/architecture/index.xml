<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>The Guidebook</title>
    <link>http://guidebook.hdyar.com/docs/programming/architecture/</link>
    <description>Recent content on The Guidebook</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language><atom:link href="http://guidebook.hdyar.com/docs/programming/architecture/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>The Architecture Lecture</title>
      <link>http://guidebook.hdyar.com/docs/programming/architecture/the-architecture-lecture/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://guidebook.hdyar.com/docs/programming/architecture/the-architecture-lecture/</guid>
      <description>The Architecture Lecture
  </description>
    </item>
    
    <item>
      <title>A Simple State Machine</title>
      <link>http://guidebook.hdyar.com/docs/programming/architecture/simple-state-machine/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://guidebook.hdyar.com/docs/programming/architecture/simple-state-machine/</guid>
      <description>Creating a simple state machine in Unity#  Additional Resources# One Wheel Studio - The State Pattern Habrador - State Pattern Tutorial Game Programming Patterns Book. Chapter on State  </description>
    </item>
    
    <item>
      <title>Accessing Data (from elsewhere)</title>
      <link>http://guidebook.hdyar.com/docs/programming/architecture/accessing-data/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://guidebook.hdyar.com/docs/programming/architecture/accessing-data/</guid>
      <description>How to Access Data From Another Script in Unity#  Also see: Data-oriented design.
Also see: Event Systems.</description>
    </item>
    
    <item>
      <title>Data-Oriented Design with Scriptable Objects</title>
      <link>http://guidebook.hdyar.com/docs/programming/architecture/data-oriented-design-scriptable-objects/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://guidebook.hdyar.com/docs/programming/architecture/data-oriented-design-scriptable-objects/</guid>
      <description>Data-oriented Design#I think one of the best introductions to pragmatic data-oriented design is the 2017 talk that Ryan Hipple gave at the Unity Connect conference. It also introduces the basics of ScriptableObjects.
   After you have watched the above video, I recommend checking out the asset ScriptableObject-Architecture on the asset store. It&amp;rsquo;s an implementation of the ideas of the above talk, but really nicely done. It&amp;rsquo;s open source too.</description>
    </item>
    
    <item>
      <title>Event Systems</title>
      <link>http://guidebook.hdyar.com/docs/programming/architecture/event-systems/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>http://guidebook.hdyar.com/docs/programming/architecture/event-systems/</guid>
      <description>Event Systems#  </description>
    </item>
    
  </channel>
</rss>
